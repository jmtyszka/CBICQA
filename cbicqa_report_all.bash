#!/bin/bash
#
# Generate HTML report from analysis results in a QA directory
#
# AUTHOR : Mike Tyszka, Ph.D.
# DATES  : 09/16/2011 JMT From scratch

echo ""
echo "-------------------------"
echo "GENERATING SUMMARY REPORT"
echo "-------------------------"

if [ $# -lt 1 ]; then
  echo "Please provide a QA data directory name"
  echo "SYNTAX : cbicqa_report_all.bash <QA Data>"
  exit
fi

# QA Data Directory
qa_data=$1

# QA Web Site Directory
qa_website=/Library/Server/Web/Data/Sites/Default/QA

# Create website directory if necessary
if [ ! -d ${qa_website} ]
then
	echo "  Creating QA Website Directory"
	mkdir -p ${qa_website}
fi

# Output report HTML file
qa_report=${qa_website}/index.html

# Output aggregated summary file in CSV format
qa_csv=${qa_website}/qa.csv

# Clear summary QA data file
rm -rf $qa_csv

#
# Create HTML report page for all QA series
#

# Clear and create new report HTML file
rm -rf $qa_report

echo "Creating HTML report in ${qa_report}"

# Write HTML header to report file
echo "<html>
<head>
<STYLE TYPE=text/css>
<!--
BODY
   {
   font-family:sans-serif;
   }
-->
</STYLE>
</head>
<body>" >> $qa_report

echo "<h1>CBIC Quality Assurance</h1><table>" >> $qa_report

# Add timestamp
timestamp=`date`
echo "Autogenerated : $timestamp" >> $qa_report

# Create QA table
echo "<table cellpadding=2>" >> $qa_report

# Table header row
echo "<tr> <td>Date <td> <td>SNR <td>Drift % <td>Nyquist tMean <td>Noise tMean <td>Nyquist tSD <td>Noise tSD <td>Report <td>Status" >> $qa_report

# Write column headers to CSV file
echo "Date,SNR,Drift,Nyquist_tMean,Noise_tMean,Nyquist_tSD,Noise_tSD," >> $qa_csv

# Loop over all QA series in the data directory
# QA directories have form YYYYMMDD - 8 characters

# Collect directory names in reverse lexical order (ie most recent to oldest)
qa_dirs=`ls -1dr ${qa_data}/[0-2][0-9]*`

for qa_dir in ${qa_dirs}
do

  if [ -d $qa_dir ]; then

    # Study (directory) name
	study_name=`basename ${qa_dir}`

    # Summary file for all QA studies analyzed
    summary=${qa_dir}/qa_summary.txt

    # Parse summary fields
    acq_date=`awk '$1 == "acq_date" {print $2}' $summary`
    tmean_phantom=`awk '$1 == "tmean_phantom" {print $2}' $summary`
    tmean_nyquist=`awk '$1 == "tmean_nyquist" {print $2}' $summary`
    tmean_noise=`awk '$1 == "tmean_noise" {print $2}' $summary`
    tsd_nyquist=`awk '$1 == "tsd_nyquist" {print $2}' $summary`
    tsd_noise=`awk '$1 == "tsd_noise" {print $2}' $summary`
    tmean_snr=`awk '$1 == "tmean_snr" {print $2}' $summary`
	sig_drift_perc=`awk '$1 == "sig_drift_perc" {print $2}' $summary`

    # Convert acquisition date to YYYY-MM-DD format (compatible with GNUPLOT and Excel)
    YYYY=${acq_date:0:4}
    MM=${acq_date:4:2}
    DD=${acq_date:6:2}
    acq_date="${YYYY}-${MM}-${DD}"

    # Add table row
    echo "<tr> <td>${acq_date} <td> <td>${tmean_snr} <td>${sig_drift_perc} <td>${tmean_nyquist} <td>${tmean_noise} <td>${tsd_nyquist} <td>${tsd_noise}" >> $qa_report

    # Add link to daily QA report
    daily_report_url="${study_name}/qa_report.html"
    echo "<td><a href=${daily_report_url}>Report</a>" >> $qa_report

    # Get QA fail rows (if any) from QA report page
    fails=`fgrep Fail ${qa_dir}/qa_report.html`

    # Add colored QA status flag
    if [ -z "${fails}" ]
    then

        echo "<td><p style=""color:green"">Pass</p>" >> $qa_report

    else

        # Remove all <tr> and </tr> and <td>
        #tmp=${fails//<tr>/}
        #tmp=${tmp//<\/tr>/}
        #tmp=${tmp//<td>/}

        # Write fail cell to table
        echo "<td><p style=""color:red"">Check</p>" >> $qa_report

    fi

	# Add line to CSV file
    echo "$acq_date,$tmean_snr,$sig_drift_perc,$tmean_nyquist,$tmean_noise,$tsd_nyquist,$tsd_noise," >> $qa_csv

  fi

done

# Close out HTML report
echo "</table></body></html>" >> $qa_report
